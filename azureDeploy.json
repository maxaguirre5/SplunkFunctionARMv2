{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "cns",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "eventhubNamespace": {
      "defaultValue": "eventhub",
      "type": "String"
    },
    "keyvaultName": {
      "defaultValue": "keyvault",
      "type": "String"
    },
    "MSCLOUD_SPN_ID": {
      "defaultValue": "61868876-0e7f-45ec-b9d2-5e7c364113ce",
      "type": "string"
    },
    "CONTRIBUTOR_ID": {
      "defaultValue": "1cdec062-3eec-48c0-a6e6-0def89f4cf4a",
      "type": "string"
    },
    "splunkToken": {
      "type": "string"
    },
    "splunkAddress": {
      "type": "string"
    },
    "splunkCertThumbprint": {
      "type": "string",
      "defaultValue": ""
    },
    "appInsightsLocation": {
      "type": "string",
      "defaultValue": "South Central US",
      "allowedValues": [
        "Australia East",
        "Canada Central",
        "Central India",
        "East US",
        "France Central",
        "Japan East",
        "Korea Central",
        "North Europe",
        "South Central US",
        "Southeast Asia",
        "UK South",
        "UK West",
        "West Europe",
        "West US 2"
      ]
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "sights"
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {
        "Group": "Rackspace",
        "Rackspace-Service": "CNS"
      }
    }
  },
  "variables": {
    "functionAppName": "[concat(parameters('appName'), uniqueString(resourceGroup().id))]",
    "ConsumptionName": "[concat('plan-', uniqueString(resourceGroup().id))]",
    "hostingPlanName": "[variables(concat('Consumption', 'Name'))]",
    "storageAccountName": "[concat('func', uniquestring(resourceGroup().id))]",
    "hubnamespace": "[concat(parameters('eventhubNamespace'), uniquestring(resourceGroup().id))]",
    "vaultname": "[concat(parameters('keyvaultName'), uniquestring(resourceGroup().id)) ]",
    "sightname" : "[concat(parameters('appInsightsName'), uniqueString(resourceGroup().id))]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "githubRepoURL": "https://github.com/villanub/ASCSplunkFunctionV2.git",
    "githubRepoBranch": "master",
    "inputHubNameActivityLogs": "insights-operational-logs",
    "consumerGroupNameActivityLog": "$default",
    "inputHubNameDiagnosticLogs": "insights-logs-diagnostics",
    "inputHubNameSecurityLogs": "security",
    "consumerGroupNameSecurityLog": "security",
    "consumerGroupNameDiagnosticLogs": "$default",
    "inputHubNameMetrics": "insights-metrics-pt1m",
    "consumerGroupNameMetrics": "$default",
    "inputHubNameWAD": "insights-telemetry-wad",
    "consumerGroupNameWAD": "$default",
    "inputHubNameLAD": "insights-telemetry-lad",
    "consumerGroupNameLAD": "$default",
    "inputHubNameFaults": "transmission-faults",
    "outputBinding": "hec",
    "outputHubConnection": "Endpoint=sb://YOURNAMESPACE.servicebus.windows.net/;SharedAccessKeyName=YOURPOLICYNAME;SharedAccessKey=YOURPOLICYKEY",
    "output-hub-name-proxy": "collector-to-proxy",
    "appServicePlanType": "Consumption"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('resourceTags')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "dependsOn": [
        "eventhub"
      ]
    },
    {
      "name": "[variables('sightname')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2015-05-01",
      "location": "[parameters('appInsightsLocation')]",
      "tags": "[parameters('resourceTags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Bluefield",
        "Request_Source": "rest"
      }
    },
    {
      "condition": "[equals(variables('appServicePlanType'), 'Consumption')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[variables('ConsumptionName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "name": "[variables('ConsumptionName')]",
        "computeMode": "Dynamic"
      },
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      }
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('resourceTags')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('sightname'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
              "value": "true"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~10"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('sightname')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "hubConnection",
              "value": "[reference('eventhub').outputs.eventhub.value]"
            },
            {
              "name": "input-hub-name-activity-log",
              "value": "[variables('inputHubNameActivityLogs')]"
            },
            {
              "name": "consumer-group-activity-log",
              "value": "[variables('consumerGroupNameActivityLog')]"
            },
            {
              "name": "input-hub-name-diagnostic-logs",
              "value": "[variables('inputHubNameDiagnosticLogs')]"
            },
            {
              "name": "consumer-group-diagnostic-logs",
              "value": "[variables('consumerGroupNameDiagnosticLogs')]"
            },
            {
              "name": "input-hub-name-metrics",
              "value": "[variables('inputHubNameMetrics')]"
            },
            {
              "name": "consumer-group-metrics",
              "value": "[variables('consumerGroupNameMetrics')]"
            },
            {
              "name": "input-hub-name-wad",
              "value": "[variables('inputHubNameWAD')]"
            },
            {
              "name": "consumer-group-wad",
              "value": "[variables('consumerGroupNameWAD')]"
            },
            {
              "name": "input-hub-name-lad",
              "value": "[variables('inputHubNameLAD')]"
            },
            {
              "name": "consumer-group-lad",
              "value": "[variables('consumerGroupNameLAD')]"
            },
            {
              "name": "consumer-group-security-log",
              "value": "[variables('consumerGroupNameSecurityLog')]"
            },
            {
              "name": "input-hub-name-faults",
              "value": "[variables('inputHubNameFaults')]"
            },
            {
              "name": "input-hub-name-security-log",
              "value": "[variables('inputHubNameSecurityLogs')]"
            },
            {
              "name": "splunkToken",
              "value": "[parameters('splunkToken')]"
            },
            {
              "name": "splunkAddress",
              "value": "[parameters('splunkAddress')]"
            },
            {
              "name": "outputBinding",
              "value": "[variables('outputBinding')]"
            },
            {
              "name": "splunkCertThumbprint",
              "value": "[parameters('splunkCertThumbprint')]"
            },
            {
              "name": "outputHubConnection",
              "value": "[variables('outputHubConnection')]"
            },
            {
              "name": "output-hub-name-proxy",
              "value": "[variables('output-hub-name-proxy')]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2018-11-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[variables('githubRepoURL')]",
            "branch": "[variables('githubRepoBranch')]",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "eventhub",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'eventhub.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "eventhub_namespace": {
            "value": "[variables('hubnamespace')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "keyvault",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'keyvault.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "functionapp": {
            "value": "[variables('functionAppName')]"
          },
          "MSCLOUD_SPN_ID": {
            "value": "[parameters('MSCLOUD_SPN_ID')]"
          },
          "CONTRIBUTOR_ID": {
            "value": "[parameters('CONTRIBUTOR_ID')]"
          },
          "RaxToken": {
            "value" : "[parameters('splunkToken')]"
          },
          "RaxWeb": {
            "value" : "[parameters('splunkAddress')]"
          },
          "RaxConnectionString":{
            "value" : "[reference('eventhub').outputs.eventhub.value]"
          },
          "cns_vaults_name": {
            "value" : "[variables('vaultname')]"
          }
        }

      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
      ]
    }
  ],
  "outputs": {
    "principalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2018-11-01', 'Full').identity.principalId]"
    },
    "eventhubprimarykey": {
      "type": "string",
      "value": "[reference('eventhub').outputs.eventhub.value]"
    }
  }
}
